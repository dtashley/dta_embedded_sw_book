%!PS-Adobe-3.0 EPSF-3.0
%%Title: c:\ucswbka\c_cfr0\pholder.eps
%%Creator: Micrografx Graphics Engine
%%CreationDate: Thu Aug 30 21:57:37 2001
%%BoundingBox: 242 0 345 46 
%%Pages: (atend)
%%LanguageLevel: 1
%%CMYKCustomColor: (atend)
%%DocumentCustomColors: (atend)
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset RangerDict 1 1
/RangerDict 150 dict def RangerDict begin /bd{bind def}bind def /ld{load def}bd 
/p/closepath ld /cc/concat ld /v/curveto ld /gr/grestore ld /gs/gsave ld 
/l/lineto ld /m/moveto ld /n/newpath ld /r/rlineto ld /sc/scale ld /sd/setdash 
ld /g/setgray ld /lc/setlinecap ld /lj/setlinejoin ld /lw/setlinewidth ld 
/c/setrgbcolor ld /sp/showpage ld /s/stroke ld /tf/transform ld /tr/translate 
ld /xd{exch def}bd /MGX_Overprint false def /min{2 copy gt{exch} if pop}bd 
/arct where {pop} {/arct{arcto pop pop pop pop}bd} ifelse /make_ro_array { 
/packedarray where { pop packedarray }{array astore readonly } ifelse } bd 
/findcmykcustomcolor where { pop }{ /findcmykcustomcolor { 5 make_ro_array } 
def } ifelse /setcustomcolor where { pop } { /setcustomcolor { exch aload pop 
pop 4 { 4 index mul 4 1 roll } repeat 5 -1 roll pop setcmykcolor } def } ifelse 
/setcmykcolor where {pop /k/setcmykcolor ld} {/k{4 1 roll 3 {3 index add 1 min 
1 exch sub 3 1 roll} repeat c pop}bd} ifelse /x {/tint xd findcmykcustomcolor 
MGX_Overprint setoverprint tint 1 exch sub setcustomcolor} def /setoverprint 
where {pop}{/setoverprint {/MGX_Overprint xd} def} ifelse /currentoverprint 
where {pop}{/currentoverprint{MGX_Overprint}def} ifelse /op{setoverprint}def 
/_mx matrix def /smx{/_mx _mx currentmatrix def}bd /rmx{_mx setmatrix}bd /_ctm 
matrix def /sctm{/_ctm _ctm currentmatrix def /_res 72 72 matrix defaultmatrix 
dtransform _ctm idtransform pop abs def}bd /rctm{_ctm setmatrix}bd /el{smx tr 
sc 1 eq {0 -1 m} if 0 0 1 -90 270 arc rmx}bd /ea{smx tr sc 1 eq {arcn} {arc} 
ifelse 1 eq {0 0 l} if rmx}bd /rt{1 eq {m} {l} ifelse 2 copy 0 r 0 exch r neg 0 
r neg 0 exch r}bd /rr{smx tr /_wy exch 3 index div def /_wx exch 3 index div 
def sc _wx 2 div 0 3 -1 roll 1 eq {m} {l} ifelse 0 0 0 _wy 0.5 arct 0 _wy _wx 
_wy 0.5 arct _wx _wy _wx 0 0.5 arct _wx 0 0 0 0.5 arct _wx 2 div 0 l rmx}bd 
/clp{/_ct xd {{gs _ct 1 eq {eoclip} {clip} ifelse}stopped {gr currentflat 1 add 
setflat} {exit} ifelse} loop}bd /horz{_y1 _w 2 div add _w _y2 {dup _x1 exch m 
_x2 exch l s} for}bd /vert{_x1 _w 2 div add _w _x2 {dup _y1 m _y2 l s} for}bd 
/fdiag{_x1 _w _x2 _y2 _y1 sub add{_y2 m _y2 _y1 sub neg dup r s} for}bd 
/bdiag{_x1 _y2 _y1 sub sub _w _x2{_y2 m _y2 _y1 sub dup neg r s} for}bd 
/hf{/_ht xd clp rctm /_w _res 12 div def pathbbox _w div cvi 1 add _w mul /_y2 
xd _w div cvi 1 add _w mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w mul 
/_x1 xd 1 lw [] 0 sd n _ht 0 eq {horz} if _ht 1 eq {vert} if _ht 2 eq {fdiag} 
if _ht 3 eq {bdiag} if _ht 4 eq {horz vert} if _ht 5 eq {fdiag bdiag} if gr}bd 
/bf{/_im xd clp rctm /_w _res 12 div round def pathbbox _w div cvi 1 add _w mul 
/_y2 xd _w div cvi 1 add _w mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w 
mul /_x1 xd /_wx _x2 _x1 sub def /_wy _y2 _y1 sub def /_swx _wx _w div cvi 8 
mul def /_swy _wy _w div cvi 8 mul def /_ic 0 def _x1 _y1 tr _wx _wy sc _swx 
_swy false [_swx 0 0 _swy 0 0] /_swx _swx 8 div def {_im _ic _swx div cvi 8 mod 
1 getinterval /_ic _ic 1 add def} imagemask gr}bd /readimg{currentfile _imgstr 
readstring pop}bd /readimgx{currentfile _imgstr readhexstring pop}bd /i{gs tr 
sc /_imgstr exch string def [4 index 0 0 6 index 0 0] exch 1 eq {{readimg}} 
{{readimgx}} ifelse image gr}bd /im{gs tr sc /_imgstr exch string def 1 eq 
{true} {false} ifelse [3 index 0 0 5 index 0 0] {readimgx} imagemask gr}bd 
userdict /RangerImage 40 dict dup begin put /_image systemdict /image get def 
/_setgray systemdict /setgray get def /_currentgray systemdict /currentgray get 
def /_settransfer systemdict /settransfer get def /_currenttransfer systemdict 
/currenttransfer get def /clr? /deviceinfo where {pop deviceinfo /Colors known 
{deviceinfo /Colors get exec 1 gt}{false}ifelse }{ /statusdict where { pop 
statusdict /processcolors known { statusdict /processcolors get exec 1 gt }{ 
false }ifelse }{ false }ifelse }ifelse def /blank 0 _currenttransfer exec 1 
_currenttransfer exec eq def /negative blank{ 0 _currenttransfer exec 0.5 lt }{ 
0 _currenttransfer exec 1 _currenttransfer exec gt }ifelse def /inverted? 
negative def /l2? /languagelevel where{pop languagelevel 2 ge}{false} ifelse 
def /4= { 4 index eq 8 1 roll 4 index eq 8 1 roll 4 index eq 8 1 roll 4 index 
eq 8 1 roll pop pop pop pop and and and }def clr? {/band 0 def}{/band 5 
def}ifelse /setcmykcolor where { pop 1 0 0 0 setcmykcolor _currentgray 1 exch 
sub 0 1 0 0 setcmykcolor _currentgray 1 exch sub 0 0 1 0 setcmykcolor 
_currentgray 1 exch sub 0 0 0 1 setcmykcolor _currentgray 1 exch sub 4 {4 copy} 
repeat 1 0 0 0 4= {/band 1 store} if 0 1 0 0 4= {/band 2 store} if 0 0 1 0 4= 
{/band 3 store} if 0 0 0 1 4= {/band 4 store} if 0 0 0 0 4= {/band 6 store} if 
} if blank {/band 6 store} if l2? {band 0 eq {/DeviceCMYK}{/DeviceGray} ifelse 
setcolorspace } if /readdata {currentfile exch readhexstring pop} def /sepimage 
l2? { /image ld }{ { begin Width Height BitsPerComponent ImageMatrix Decode 
length 2 eq {/DataSource load image} if Decode length 6 eq {DataSource 0 get 
DataSource 1 get DataSource 2 get true 3 colorimage }if Decode length 8 eq { 
DataSource 0 get DataSource 1 get DataSource 2 get DataSource 3 get true 4 
colorimage }if end }def }ifelse /_image2 l2? { /_image ld }{ { begin Width 
Height BitsPerComponent ImageMatrix /DataSource load _image end } def }ifelse 
/doimage { band 0 eq band 5 eq or { sepimage } if band 1 ge band 4 le and { {1 
exch sub dummy exec} dup 3 _currenttransfer put _settransfer _image2 } if band 
6 eq { negative {{pop 0}}{{pop 1} }ifelse _settransfer _image2 }if } def /ic { 
gsave translate scale /scanlen xd /ncomp xd /IsBin xd /bpcomp xd /rows xd /cols 
xd /picstr1 cols string def /picstr2 cols string def /picstr3 cols string def 
/picstr4 cols string def /picstr5 cols string def 12 dict begin /ImageType 1 
def /Width cols def /Height rows def /ImageMatrix [cols 0 0 rows 0 0] def 
/BitsPerComponent bpcomp def band 0 eq { /Decode [0 1 0 1 0 1 0 1] def } { 
/Decode [0 1] def } ifelse band 0 eq { /MultipleDataSources true def 
/DataSource [ { picstr1 readdata } { picstr2 readdata } { picstr3 readdata } { 
picstr4 readdata picstr5 readdata pop } ] def } if band 1 eq { /DataSource { 
picstr1 readdata picstr2 readdata pop picstr3 readdata pop picstr4 readdata pop 
picstr5 readdata pop } def } if band 2 eq { /DataSource { picstr1 readdata pop 
picstr2 readdata picstr3 readdata pop picstr4 readdata pop picstr5 readdata pop 
} def } if band 3 eq { /DataSource { picstr1 readdata pop picstr2 readdata pop 
picstr3 readdata picstr4 readdata pop picstr5 readdata pop } def } if band 4 eq 
{ /DataSource { picstr1 readdata pop picstr2 readdata pop picstr3 readdata pop 
picstr4 readdata picstr5 readdata pop } def } if band 5 ge { /DataSource { 
picstr1 readdata pop picstr2 readdata pop picstr3 readdata pop picstr4 readdata 
pop picstr5 readdata } def } if currentdict end doimage grestore } def 
currentdict readonly pop end /bullets{{/bullet}repeat} bd 
/WE[/grave/acute/circumflex/tilde/macron 
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18 
bullets StandardEncoding 32 95 getinterval aload pop 3 bullets 
/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex 
/perthousand/Scaron/guilsinglleft/OE 4 bullets/quoteleft/quoteright 
/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron 
/guilsinglright/oe 2 bullets /Ydieresis/space/exclamdown/cent/sterling 
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine 
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus 
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla 
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters 
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla 
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis 
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash 
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute 
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex 
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute 
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex 
/udieresis/yacute/thorn/ydieresis]def WE dup 39/quotesingle put 96/grave put 
/selectfont where {pop} {/selectfont {exch findfont exch dup type /arraytype eq 
{makefont} {scalefont} ifelse setfont}bd} ifelse /_mxe matrix def /_mxf matrix 
def /we {/_fn xd FontDirectory _fn known {pop} {findfont dup maxlength dict 
/_fd xd {exch dup /FID ne {exch _fd 3 1 roll put} {pop pop} ifelse} forall _fd 
dup /FontName _fn put /Encoding WE put _fn _fd definefont pop} ifelse _fn} bd 
/fnt {/_ys xd /_xs xd /_asc xd /_itl exch dup 0 ne {10.0 div sin} if def [1 0 
_itl 1 0 0] [_xs 0 0 _ys neg 0 _asc] _mxf concatmatrix selectfont currentfont 
dup dup /FontInfo known {/FontInfo get} if /UnderlinePosition known not {pop 
/Courier findfont} if /FontInfo get /UnderlinePosition get 1000 div 0 exch _mxf 
tf /_ulpos xd pop 0 .3 _mxf tf /_sopos xd pop currentfont dup dup /FontInfo 
known {/FontInfo get} if /UnderlineThickness known not {pop /Courier findfont} 
if /FontInfo get /UnderlineThickness get 1000 div _ys mul /_ulsiz xd } bd /to 
{m show n} bd /tp {m false charpath} bd /ul {1 eq {/_pos _ulpos def} {/_pos 
_sopos def} ifelse 1 eq {gs [] 0 sd 0 lc _ulsiz lw _pos add m 0 r s gr} {_pos 
add _ulsiz 2 div add m 0 _ulsiz neg r 0 r 0 _ulsiz r p} ifelse} bd end 
%%EndResource
%%EndProlog
%%BeginSetup
RangerImage begin RangerDict begin userdict begin 0 164 tr 0.036 -0.036 sc sctm 
%%EndSetup
%%Page: 1 1 
%%PageResources: (atend)
%%BeginPageSetup
%%EndPageSetup
1272 2829 6729 3283 1 rt p gs 0.000 0.000 0.000 0.000 k eofill gr 352 lw 0 lj 0 
lc 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 0.078740 0.000 0.000 ] 
cc s rctm 7639 3695 m 7639 3721 7639 3747 7639 3773 v 7654 3773 7670 3773 7686 
3773 v 7689 3773 7691 3774 7693 3775 v 7694 3776 7695 3778 7695 3780 v 7695 
3782 7694 3783 7693 3785 v 7691 3786 7689 3787 7686 3787 v 7660 3787 7634 3787 
7607 3787 v 7603 3787 7601 3786 7600 3785 v 7598 3783 7597 3782 7597 3780 v 
7597 3778 7598 3776 7600 3775 v 7601 3774 7603 3773 7607 3773 v 7613 3773 7619 
3773 7625 3773 v 7625 3719 7625 3665 7625 3610 v 7619 3610 7613 3610 7607 3610 
v 7603 3610 7601 3610 7600 3608 v 7598 3607 7597 3606 7597 3603 v 7597 3601 
7598 3600 7600 3598 v 7601 3597 7603 3597 7607 3597 v 7657 3597 7707 3597 7757 
3597 v 7757 3612 7757 3627 7757 3643 v 7757 3647 7757 3649 7755 3650 v 7754 
3652 7753 3653 7750 3653 v 7749 3653 7747 3652 7746 3650 v 7744 3649 7743 3647 
7743 3643 v 7743 3632 7743 3621 7743 3610 v 7709 3610 7674 3610 7639 3610 v 
7639 3633 7639 3657 7639 3681 v 7655 3681 7671 3681 7688 3681 v 7688 3676 7688 
3671 7688 3666 v 7688 3662 7689 3660 7690 3659 v 7691 3657 7693 3656 7695 3656 
v 7697 3656 7698 3657 7700 3659 v 7701 3660 7701 3662 7701 3666 v 7701 3680 
7701 3695 7701 3710 v 7701 3714 7701 3716 7700 3717 v 7698 3719 7697 3720 7695 
3720 v 7693 3720 7691 3719 7690 3717 v 7689 3716 7688 3714 7688 3710 v 7688 
3705 7688 3700 7688 3695 v 7672 3695 7656 3695 7639 3695 v p 0.000 0.000 0.000 
1.000 k eofill 7878 3576 m 7878 3587 7878 3599 7878 3611 v 7872 3611 7865 3611 
7858 3611 v 7858 3600 7858 3588 7858 3576 v 7864 3576 7871 3576 7878 3576 v p 
7879 3646 m 7879 3688 7879 3730 7879 3773 v 7896 3773 7914 3773 7932 3773 v 
7935 3773 7938 3774 7939 3775 v 7941 3776 7941 3778 7941 3780 v 7941 3782 7941 
3783 7939 3785 v 7938 3786 7935 3787 7932 3787 v 7892 3787 7852 3787 7811 3787 
v 7808 3787 7806 3786 7804 3785 v 7803 3783 7802 3782 7802 3780 v 7802 3778 
7803 3776 7804 3775 v 7806 3774 7808 3773 7811 3773 v 7829 3773 7847 3773 7865 
3773 v 7865 3736 7865 3698 7865 3660 v 7852 3660 7839 3660 7825 3660 v 7822 
3660 7820 3659 7818 3657 v 7817 3656 7816 3655 7816 3653 v 7816 3651 7817 3649 
7818 3648 v 7820 3646 7822 3646 7825 3646 v 7843 3646 7861 3646 7879 3646 v p 
0.000 0.000 0.000 1.000 k eofill 8117 3671 m 8117 3663 8117 3655 8117 3646 v 
8127 3646 8138 3646 8149 3646 v 8152 3646 8155 3646 8156 3648 v 8158 3649 8158 
3650 8158 3653 v 8158 3654 8158 3656 8156 3657 v 8155 3659 8152 3660 8149 3660 
v 8143 3660 8137 3660 8131 3660 v 8131 3705 8131 3750 8131 3796 v 8131 3806 
8129 3814 8125 3821 v 8122 3826 8118 3830 8112 3836 v 8106 3841 8100 3844 8095 
3846 v 8090 3849 8084 3850 8075 3850 v 8062 3850 8049 3850 8036 3850 v 8033 
3850 8031 3849 8029 3848 v 8028 3847 8027 3845 8027 3843 v 8027 3841 8028 3839 
8029 3838 v 8031 3837 8033 3836 8036 3836 v 8049 3836 8062 3836 8076 3836 v 
8084 3836 8091 3834 8097 3830 v 8104 3826 8109 3820 8113 3812 v 8116 3807 8117 
3802 8117 3795 v 8117 3781 8117 3767 8117 3753 v 8102 3773 8083 3783 8060 3783 
v 8042 3783 8025 3776 8012 3763 v 7998 3749 7991 3732 7991 3712 v 7991 3693 
7998 3676 8012 3662 v 8025 3648 8042 3641 8060 3641 v 8083 3641 8102 3651 8117 
3671 v 8117 3671 8117 3671 8117 3671 v p 8117 3712 m 8117 3696 8111 3683 8100 
3671 v 8089 3660 8076 3655 8061 3655 v 8046 3655 8032 3660 8021 3671 v 8010 
3683 8005 3696 8005 3712 v 8005 3729 8010 3742 8021 3753 v 8032 3764 8046 3770 
8061 3770 v 8076 3770 8089 3764 8100 3753 v 8111 3742 8117 3729 8117 3712 v 
8117 3712 8117 3712 8117 3712 v p 0.000 0.000 0.000 1.000 k eofill 8317 3787 m 
8317 3781 8317 3774 8317 3767 v 8298 3784 8278 3793 8257 3793 v 8243 3793 8233 
3789 8226 3781 v 8217 3772 8213 3760 8213 3748 v 8213 3719 8213 3690 8213 3660 
v 8207 3660 8201 3660 8195 3660 v 8191 3660 8189 3659 8188 3657 v 8186 3656 
8185 3655 8185 3653 v 8185 3651 8186 3649 8188 3648 v 8189 3646 8191 3646 8195 
3646 v 8205 3646 8216 3646 8227 3646 v 8227 3680 8227 3714 8227 3748 v 8227 
3757 8229 3764 8235 3770 v 8241 3776 8248 3779 8256 3779 v 8278 3779 8299 3768 
8317 3748 v 8317 3719 8317 3690 8317 3660 v 8309 3660 8301 3660 8292 3660 v 
8289 3660 8286 3659 8285 3657 v 8283 3656 8283 3655 8283 3653 v 8283 3651 8283 
3649 8285 3648 v 8286 3646 8289 3646 8292 3646 v 8305 3646 8318 3646 8331 3646 
v 8331 3688 8331 3730 8331 3773 v 8334 3773 8338 3773 8342 3773 v 8345 3773 
8348 3774 8349 3775 v 8351 3776 8351 3778 8351 3780 v 8351 3782 8351 3783 8349 
3785 v 8348 3786 8345 3787 8342 3787 v 8334 3787 8326 3787 8317 3787 v p 0.000 
0.000 0.000 1.000 k eofill 8454 3646 m 8454 3657 8454 3668 8454 3680 v 8472 
3664 8485 3654 8494 3650 v 8503 3645 8511 3643 8518 3643 v 8527 3643 8534 3645 
8541 3651 v 8548 3656 8552 3660 8552 3663 v 8552 3665 8551 3667 8550 3668 v 
8548 3670 8547 3670 8545 3670 v 8543 3670 8542 3670 8542 3670 v 8541 3670 8540 
3668 8538 3666 v 8534 3662 8530 3660 8528 3658 v 8525 3657 8522 3656 8519 3656 
v 8513 3656 8506 3659 8498 3663 v 8489 3668 8475 3680 8454 3698 v 8454 3723 
8454 3748 8454 3773 v 8474 3773 8494 3773 8514 3773 v 8518 3773 8520 3774 8522 
3775 v 8523 3776 8524 3778 8524 3780 v 8524 3782 8523 3783 8522 3785 v 8520 
3786 8518 3787 8514 3787 v 8479 3787 8444 3787 8408 3787 v 8404 3787 8402 3786 
8401 3785 v 8399 3783 8398 3782 8398 3780 v 8398 3778 8399 3776 8400 3776 v 
8402 3774 8404 3773 8408 3773 v 8418 3773 8429 3773 8440 3773 v 8440 3736 8440 
3698 8440 3660 v 8432 3660 8424 3660 8415 3660 v 8412 3660 8410 3659 8408 3657 
v 8407 3656 8406 3655 8406 3653 v 8406 3651 8407 3649 8408 3648 v 8409 3646 
8412 3646 8415 3646 v 8428 3646 8441 3646 8454 3646 v p 0.000 0.000 0.000 1.000 
k eofill 8744 3720 m 8698 3720 8652 3720 8605 3720 v 8607 3737 8614 3751 8627 
3763 v 8639 3773 8655 3779 8673 3779 v 8683 3779 8694 3777 8705 3773 v 8716 
3770 8725 3766 8732 3760 v 8734 3758 8736 3757 8738 3757 v 8739 3757 8741 3758 
8742 3759 v 8743 3761 8744 3763 8744 3764 v 8744 3766 8743 3768 8741 3770 v 
8736 3775 8727 3780 8714 3785 v 8700 3790 8687 3793 8673 3793 v 8650 3793 8630 
3784 8614 3769 v 8599 3754 8591 3735 8591 3713 v 8591 3693 8598 3676 8613 3663 
v 8628 3648 8646 3641 8668 3641 v 8690 3641 8708 3649 8723 3663 v 8737 3678 
8744 3696 8744 3720 v 8744 3720 8744 3720 8744 3720 v p 8730 3706 m 8728 3691 
8720 3679 8709 3669 v 8697 3660 8683 3655 8668 3655 v 8652 3655 8638 3660 8626 
3669 v 8615 3679 8607 3691 8605 3706 v 8646 3706 8688 3706 8730 3706 v p 0.000 
0.000 0.000 1.000 k eofill 7143 4086 m 7143 4107 7143 4129 7143 4151 v 7158 
4151 7174 4151 7190 4151 v 7193 4151 7196 4151 7197 4153 v 7199 4154 7199 4155 
7199 4157 v 7199 4159 7199 4161 7197 4162 v 7196 4164 7193 4164 7190 4164 v 
7164 4164 7138 4164 7111 4164 v 7108 4164 7106 4164 7104 4162 v 7103 4161 7102 
4159 7102 4157 v 7102 4155 7103 4154 7104 4153 v 7106 4151 7108 4151 7111 4151 
v 7117 4151 7123 4151 7130 4151 v 7130 4097 7130 4043 7130 3988 v 7124 3988 
7118 3988 7111 3988 v 7108 3988 7106 3987 7104 3986 v 7103 3985 7102 3983 7102 
3981 v 7102 3979 7103 3977 7104 3976 v 7106 3975 7108 3974 7111 3974 v 7137 
3974 7164 3974 7191 3974 v 7209 3974 7225 3980 7237 3991 v 7248 4002 7254 4015 
7254 4030 v 7254 4038 7252 4046 7249 4053 v 7244 4060 7240 4066 7235 4070 v 
7227 4076 7218 4080 7209 4083 v 7203 4085 7195 4086 7186 4086 v 7172 4086 7158 
4086 7143 4086 v p 7143 4073 m 7157 4073 7172 4073 7187 4073 v 7197 4073 7206 
4070 7215 4066 v 7224 4061 7231 4056 7235 4049 v 7239 4043 7241 4036 7241 4030 
v 7241 4019 7236 4009 7227 4000 v 7218 3992 7206 3988 7192 3988 v 7176 3988 
7160 3988 7143 3988 v 7143 4016 7143 4044 7143 4073 v p 0.000 0.000 0.000 1.000 
k eofill 7379 3960 m 7379 4023 7379 4087 7379 4151 v 7396 4151 7414 4151 7432 
4151 v 7436 4151 7438 4151 7440 4153 v 7441 4154 7442 4155 7442 4157 v 7442 
4159 7441 4161 7440 4162 v 7438 4164 7436 4164 7432 4164 v 7392 4164 7352 4164 
7312 4164 v 7309 4164 7306 4164 7305 4162 v 7303 4161 7303 4159 7303 4157 v 
7303 4155 7303 4154 7305 4153 v 7306 4151 7309 4151 7312 4151 v 7330 4151 7348 
4151 7366 4151 v 7366 4092 7366 4033 7366 3974 v 7353 3974 7340 3974 7326 3974 
v 7323 3974 7320 3973 7319 3972 v 7317 3970 7317 3969 7317 3967 v 7317 3965 
7317 3963 7319 3962 v 7320 3961 7323 3960 7326 3960 v 7343 3960 7361 3960 7379 
3960 v p 0.000 0.000 0.000 1.000 k eofill 7611 4164 m 7611 4158 7611 4152 7611 
4145 v 7591 4161 7570 4170 7547 4170 v 7531 4170 7518 4166 7509 4157 v 7500 
4149 7495 4139 7495 4127 v 7495 4114 7501 4102 7513 4092 v 7525 4082 7543 4077 
7567 4077 v 7573 4077 7580 4078 7587 4079 v 7595 4079 7603 4081 7611 4082 v 
7611 4075 7611 4068 7611 4060 v 7611 4053 7608 4046 7601 4041 v 7594 4035 7583 
4032 7569 4032 v 7559 4032 7544 4035 7524 4042 v 7521 4043 7519 4043 7518 4043 
v 7516 4043 7514 4043 7513 4041 v 7512 4040 7511 4038 7511 4037 v 7511 4035 
7512 4033 7513 4032 v 7514 4031 7521 4028 7531 4025 v 7548 4021 7561 4019 7570 
4019 v 7587 4019 7601 4023 7610 4031 v 7620 4040 7625 4050 7625 4060 v 7625 
4090 7625 4120 7625 4151 v 7631 4151 7637 4151 7643 4151 v 7647 4151 7649 4151 
7651 4153 v 7652 4154 7653 4155 7653 4157 v 7653 4159 7652 4161 7651 4162 v 
7649 4164 7647 4164 7643 4164 v 7633 4164 7622 4164 7611 4164 v p 7611 4096 m 
7605 4095 7598 4093 7591 4092 v 7584 4091 7576 4091 7568 4091 v 7548 4091 7533 
4095 7521 4104 v 7513 4110 7509 4118 7509 4127 v 7509 4135 7512 4142 7518 4148 
v 7525 4153 7534 4156 7547 4156 v 7559 4156 7570 4154 7580 4149 v 7590 4144 
7601 4137 7611 4126 v 7611 4116 7611 4106 7611 4096 v p 0.000 0.000 0.000 1.000 
k eofill 7829 4037 m 7829 4036 7829 4035 7829 4033 v 7829 4029 7830 4027 7831 
4025 v 7832 4024 7834 4023 7836 4023 v 7838 4023 7839 4024 7841 4025 v 7842 
4027 7843 4029 7843 4033 v 7843 4043 7843 4053 7843 4063 v 7843 4067 7842 4069 
7841 4071 v 7839 4072 7838 4073 7836 4073 v 7834 4073 7832 4072 7831 4071 v 
7830 4070 7829 4067 7829 4065 v 7828 4057 7823 4050 7814 4043 v 7804 4036 7791 
4032 7775 4032 v 7755 4032 7740 4039 7729 4051 v 7719 4064 7713 4079 7713 4095 
v 7713 4113 7719 4127 7731 4139 v 7742 4150 7757 4156 7776 4156 v 7786 4156 
7797 4154 7808 4150 v 7819 4146 7829 4140 7838 4131 v 7840 4129 7842 4128 7844 
4128 v 7846 4128 7848 4129 7849 4130 v 7850 4131 7851 4133 7851 4135 v 7851 
4139 7845 4145 7834 4152 v 7817 4164 7797 4170 7775 4170 v 7753 4170 7735 4163 
7721 4149 v 7707 4135 7700 4117 7700 4095 v 7700 4073 7707 4055 7721 4040 v 
7736 4026 7754 4019 7776 4019 v 7797 4019 7815 4025 7829 4037 v 7829 4037 7829 
4037 7829 4037 v p 0.000 0.000 0.000 1.000 k eofill 8045 4097 m 7999 4097 7953 
4097 7906 4097 v 7908 4115 7916 4129 7928 4140 v 7941 4151 7956 4156 7974 4156 
v 7984 4156 7995 4154 8006 4151 v 8017 4148 8026 4143 8033 4137 v 8036 4136 
8037 4135 8039 4135 v 8041 4135 8042 4136 8043 4137 v 8045 4138 8045 4140 8045 
4142 v 8045 4144 8044 4146 8043 4147 v 8038 4153 8028 4158 8015 4163 v 8002 
4168 7988 4170 7974 4170 v 7951 4170 7931 4162 7916 4147 v 7900 4131 7892 4113 
7892 4091 v 7892 4071 7900 4054 7914 4040 v 7929 4026 7947 4019 7969 4019 v 
7991 4019 8010 4026 8024 4041 v 8038 4055 8046 4074 8045 4097 v 8045 4097 8045 
4097 8045 4097 v p 8032 4084 m 8029 4068 8022 4056 8010 4047 v 7999 4037 7985 
4032 7969 4032 v 7953 4032 7939 4037 7928 4046 v 7916 4056 7909 4068 7906 4084 
v 7948 4084 7990 4084 8032 4084 v p 0.000 0.000 0.000 1.000 k eofill 8126 3960 
m 8126 3988 8126 4016 8126 4044 v 8135 4035 8143 4028 8151 4024 v 8159 4021 
8168 4019 8178 4019 v 8188 4019 8197 4021 8205 4024 v 8212 4028 8219 4034 8224 
4042 v 8229 4049 8231 4057 8231 4066 v 8231 4094 8231 4122 8231 4151 v 8236 
4151 8241 4151 8246 4151 v 8249 4151 8252 4151 8253 4153 v 8255 4154 8255 4155 
8255 4157 v 8255 4159 8255 4161 8253 4162 v 8252 4164 8249 4164 8246 4164 v 
8232 4164 8217 4164 8202 4164 v 8199 4164 8197 4164 8195 4162 v 8194 4161 8193 
4159 8193 4157 v 8193 4155 8194 4154 8195 4153 v 8197 4151 8199 4151 8202 4151 
v 8207 4151 8212 4151 8217 4151 v 8217 4123 8217 4095 8217 4067 v 8217 4057 
8214 4049 8207 4042 v 8200 4036 8190 4032 8177 4032 v 8167 4032 8158 4035 8151 
4040 v 8146 4043 8138 4051 8126 4064 v 8126 4093 8126 4122 8126 4151 v 8131 
4151 8136 4151 8141 4151 v 8144 4151 8147 4151 8148 4153 v 8150 4154 8150 4155 
8150 4157 v 8150 4159 8150 4161 8148 4162 v 8147 4164 8144 4164 8141 4164 v 
8127 4164 8112 4164 8097 4164 v 8094 4164 8092 4164 8090 4162 v 8089 4161 8088 
4159 8088 4157 v 8088 4155 8089 4154 8090 4153 v 8092 4151 8094 4151 8097 4151 
v 8102 4151 8107 4151 8112 4151 v 8112 4092 8112 4033 8112 3974 v 8106 3974 
8100 3974 8094 3974 v 8091 3974 8088 3973 8087 3972 v 8085 3970 8085 3969 8085 
3967 v 8085 3965 8085 3963 8087 3962 v 8088 3961 8091 3960 8094 3960 v 8104 
3960 8115 3960 8126 3960 v p 0.000 0.000 0.000 1.000 k eofill 8447 4094 m 8447 
4115 8440 4133 8425 4148 v 8410 4162 8392 4170 8371 4170 v 8350 4170 8331 4162 
8317 4147 v 8301 4133 8294 4115 8294 4094 v 8294 4073 8301 4056 8317 4041 v 
8331 4026 8350 4019 8371 4019 v 8392 4019 8410 4026 8425 4041 v 8440 4056 8447 
4073 8447 4094 v 8447 4094 8447 4094 8447 4094 v p 8433 4094 m 8433 4077 8427 
4062 8415 4050 v 8403 4038 8388 4032 8371 4032 v 8353 4032 8339 4038 8326 4050 
v 8314 4063 8308 4077 8308 4094 v 8308 4111 8314 4126 8326 4138 v 8339 4150 
8353 4156 8371 4156 v 8388 4156 8403 4150 8415 4138 v 8427 4126 8433 4111 8433 
4094 v 8433 4094 8433 4094 8433 4094 v p 0.000 0.000 0.000 1.000 k eofill 8577 
3960 m 8577 4023 8577 4087 8577 4151 v 8594 4151 8612 4151 8630 4151 v 8633 
4151 8636 4151 8637 4153 v 8639 4154 8639 4155 8639 4157 v 8639 4159 8639 4161 
8637 4162 v 8636 4164 8633 4164 8630 4164 v 8590 4164 8550 4164 8509 4164 v 
8506 4164 8504 4164 8502 4162 v 8501 4161 8500 4159 8500 4157 v 8500 4155 8501 
4154 8502 4153 v 8504 4151 8506 4151 8509 4151 v 8527 4151 8545 4151 8563 4151 
v 8563 4092 8563 4033 8563 3974 v 8550 3974 8537 3974 8524 3974 v 8520 3974 
8518 3973 8517 3972 v 8515 3970 8514 3969 8514 3967 v 8514 3965 8515 3963 8516 
3962 v 8518 3961 8520 3960 8524 3960 v 8541 3960 8559 3960 8577 3960 v p 0.000 
0.000 0.000 1.000 k eofill 8837 3960 m 8837 4023 8837 4087 8837 4151 v 8843 
4151 8849 4151 8855 4151 v 8858 4151 8861 4151 8862 4153 v 8864 4154 8864 4155 
8864 4157 v 8864 4159 8864 4161 8862 4162 v 8861 4164 8858 4164 8855 4164 v 
8845 4164 8834 4164 8823 4164 v 8823 4155 8823 4146 8823 4137 v 8807 4159 8787 
4170 8763 4170 v 8750 4170 8738 4167 8727 4160 v 8716 4153 8707 4144 8700 4132 
v 8694 4120 8690 4107 8690 4094 v 8690 4081 8694 4069 8700 4057 v 8707 4045 
8716 4035 8727 4029 v 8738 4022 8750 4019 8763 4019 v 8787 4019 8807 4029 8823 
4051 v 8823 4026 8823 4000 8823 3974 v 8817 3974 8811 3974 8805 3974 v 8801 
3974 8799 3973 8797 3972 v 8796 3970 8795 3969 8795 3967 v 8795 3965 8796 3963 
8797 3962 v 8799 3961 8801 3960 8805 3960 v 8815 3960 8826 3960 8837 3960 v p 
8823 4094 m 8823 4077 8817 4062 8805 4050 v 8794 4038 8780 4032 8764 4032 v 
8747 4032 8733 4038 8722 4050 v 8710 4062 8704 4077 8704 4094 v 8704 4111 8710 
4126 8722 4138 v 8733 4150 8747 4156 8764 4156 v 8780 4156 8794 4150 8805 4138 
v 8817 4126 8823 4111 8823 4094 v 8823 4094 8823 4094 8823 4094 v p 0.000 0.000 
0.000 1.000 k eofill 9043 4097 m 8997 4097 8951 4097 8904 4097 v 8906 4115 8914 
4129 8926 4140 v 8939 4151 8954 4156 8972 4156 v 8982 4156 8993 4154 9004 4151 
v 9015 4148 9024 4143 9031 4137 v 9034 4136 9035 4135 9037 4135 v 9039 4135 
9040 4136 9041 4137 v 9043 4138 9043 4140 9043 4142 v 9043 4144 9042 4146 9041 
4147 v 9036 4153 9026 4158 9013 4163 v 9000 4168 8986 4170 8972 4170 v 8949 
4170 8929 4162 8914 4147 v 8898 4131 8890 4113 8890 4091 v 8890 4071 8898 4054 
8912 4040 v 8927 4026 8945 4019 8967 4019 v 8989 4019 9008 4026 9022 4041 v 
9036 4055 9044 4074 9043 4097 v 9043 4097 9043 4097 9043 4097 v p 9030 4084 m 
9027 4068 9020 4056 9008 4047 v 8997 4037 8983 4032 8967 4032 v 8951 4032 8937 
4037 8926 4046 v 8914 4056 8907 4068 8904 4084 v 8946 4084 8988 4084 9030 4084 
v p 0.000 0.000 0.000 1.000 k eofill 9153 4023 m 9153 4034 9153 4046 9153 4058 
v 9170 4042 9184 4032 9193 4027 v 9201 4022 9210 4020 9217 4020 v 9225 4020 
9233 4023 9240 4028 v 9247 4034 9250 4038 9250 4041 v 9250 4043 9250 4044 9248 
4046 v 9247 4047 9245 4048 9243 4048 v 9242 4048 9241 4048 9240 4047 v 9240 
4047 9238 4046 9236 4044 v 9232 4040 9229 4037 9226 4036 v 9223 4034 9221 4034 
9218 4034 v 9212 4034 9205 4036 9196 4041 v 9188 4046 9173 4057 9153 4076 v 
9153 4101 9153 4126 9153 4151 v 9173 4151 9193 4151 9213 4151 v 9216 4151 9219 
4151 9220 4153 v 9222 4154 9222 4155 9222 4157 v 9222 4159 9222 4161 9220 4162 
v 9219 4164 9216 4164 9213 4164 v 9178 4164 9142 4164 9106 4164 v 9103 4164 
9101 4164 9099 4162 v 9098 4161 9097 4159 9097 4157 v 9097 4156 9098 4154 9099 
4153 v 9100 4152 9103 4151 9106 4151 v 9117 4151 9128 4151 9139 4151 v 9139 
4113 9139 4075 9139 4037 v 9131 4037 9123 4037 9114 4037 v 9111 4037 9108 4036 
9107 4035 v 9105 4034 9105 4032 9105 4030 v 9105 4028 9105 4027 9107 4025 v 
9108 4024 9111 4023 9114 4023 v 9127 4023 9140 4023 9153 4023 v p 0.000 0.000 
0.000 1.000 k eofill 
%%PageTrailer
%%Trailer
end end end 
%%DocumentProcessColors: Black
%%Pages: 1 
%%EOF
